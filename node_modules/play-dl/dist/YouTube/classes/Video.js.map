{"version":3,"file":"Video.js","sourceRoot":"","sources":["../../../play-dl/YouTube/classes/Video.ts"],"names":[],"mappings":";;;AAAA,uCAA2C;AA2B3C;;GAEG;AACH,MAAa,YAAY;IAuBrB,YAAY,IAAS;QACjB,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,oBAAoB,IAAI,CAAC,WAAW,CAAC,IAAI,eAAe,CAAC,CAAC;QAErF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,mCAAmC,IAAI,CAAC,EAAE,EAAE,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,SAAS,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,SAAS,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtD,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC,OAAO,EAAE,KAAgB,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,QAAQ,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IAChC,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,IAAI,MAAM;QACN,OAAO;YACH,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE;gBACL,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B;YACD,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;IACN,CAAC;CACJ;AAtED,oCAsEC","sourcesContent":["import { YouTubeChannel } from './Channel';\n\ninterface VideoOptions {\n    id?: string;\n    url?: string;\n    title?: string;\n    description?: string;\n    durationRaw: string;\n    durationInSec: number;\n    uploadedAt?: string;\n    views: number;\n    thumbnail?: {\n        id: string | undefined;\n        width: number | undefined;\n        height: number | undefined;\n        url: string | undefined;\n    };\n    channel?: any;\n    type: string;\n    ratings: {\n        likes: number;\n        dislikes: number;\n    };\n    live: boolean;\n    private: boolean;\n    tags: string[];\n}\n/**\n * Class for YouTube Video url\n */\nexport class YouTubeVideo {\n    id?: string;\n    url: string;\n    type: 'video' | 'playlist' | 'channel';\n    title?: string;\n    description?: string;\n    durationRaw: string;\n    durationInSec: number;\n    uploadedAt?: string;\n    views: number;\n    thumbnail?: {\n        id: string | undefined;\n        width: number | undefined;\n        height: number | undefined;\n        url: string | undefined;\n    };\n    channel?: YouTubeChannel;\n    likes: number;\n    dislikes: number;\n    live: boolean;\n    private: boolean;\n    tags: string[];\n\n    constructor(data: any) {\n        if (!data) throw new Error(`Can not initiate ${this.constructor.name} without data`);\n\n        this.id = data.id || undefined;\n        this.url = `https://www.youtube.com/watch?v=${this.id}`;\n        this.type = 'video';\n        this.title = data.title || undefined;\n        this.description = data.description || undefined;\n        this.durationRaw = data.duration_raw || '0:00';\n        this.durationInSec = (data.duration < 0 ? 0 : data.duration) || 0;\n        this.uploadedAt = data.uploadedAt || undefined;\n        this.views = parseInt(data.views) || 0;\n        this.thumbnail = data.thumbnail || {};\n        this.channel = new YouTubeChannel(data.channel) || {};\n        this.likes = (data.ratings?.likes as number) || 0;\n        this.dislikes = data.ratings?.dislikes || 0;\n        this.live = !!data.live;\n        this.private = !!data.private;\n        this.tags = data.tags || [];\n    }\n\n    get toString(): string {\n        return this.url || '';\n    }\n\n    get toJSON(): VideoOptions {\n        return {\n            id: this.id,\n            url: this.url,\n            title: this.title,\n            description: this.description,\n            durationInSec: this.durationInSec,\n            durationRaw: this.durationRaw,\n            uploadedAt: this.uploadedAt,\n            thumbnail: this.thumbnail,\n            channel: this.channel,\n            views: this.views,\n            type: this.type,\n            tags: this.tags,\n            ratings: {\n                likes: this.likes,\n                dislikes: this.dislikes\n            },\n            live: this.live,\n            private: this.private\n        };\n    }\n}\n"]}