/// <reference types="node" />
import { Readable } from 'node:stream';
import { StreamOptions, StreamType } from '../stream';
export interface FormatInterface {
    url: string;
    targetDurationSec: number;
    maxDvrDurationSec: number;
}
export declare class LiveStreaming {
    stream: Readable;
    type: StreamType;
    private base_url;
    private url;
    private interval;
    private packet_count;
    private timer;
    private video_url;
    private dash_timer;
    private segments_urls;
    private request;
    constructor(dash_url: string, target_interval: number, video_url: string);
    private dash_updater;
    private dash_getter;
    private cleanup;
    private start;
    pause(): void;
    resume(): void;
}
/**
 * Class for YouTube Stream
 */
export declare class Stream {
    stream: Readable;
    type: StreamType;
    private url;
    private bytes_count;
    private per_sec_bytes;
    private content_length;
    private video_url;
    private timer;
    private quality;
    private proxy;
    private request;
    constructor(url: string, type: StreamType, duration: number, contentLength: number, video_url: string, options: StreamOptions);
    private retry;
    private cleanup;
    private loop;
    pause(): void;
    resume(): void;
}
export declare class Timer {
    private destroyed;
    private paused;
    private timer;
    private callback;
    private time_start;
    private time_left;
    private time_total;
    constructor(callback: () => void, time: number);
    pause(): boolean;
    resume(): boolean;
    reuse(): boolean;
    destroy(): void;
}
//# sourceMappingURL=LiveStream.d.ts.map