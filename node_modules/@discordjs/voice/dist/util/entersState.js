"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.entersState = void 0;
/**
 * Allows a target a specified amount of time to enter a given state, otherwise rejects with an error.
 *
 * @param target - The object that we want to observe the state change for
 * @param status - The status that the target should be in
 * @param maxTime - The maximum time we are allowing for this to occur
 */
function entersState(target, status, maxTime) {
    if (target.state.status === status) {
        return Promise.resolve(target);
    }
    let cleanup;
    return new Promise((resolve, reject) => {
        const timeout = setTimeout(() => reject(new Error(`Did not enter state ${status} within ${maxTime}ms`)), maxTime);
        target.once(status, resolve);
        target.once('error', reject);
        cleanup = () => {
            clearTimeout(timeout);
            target.off(status, resolve);
            target.off('error', reject);
        };
    })
        .then(() => target)
        .finally(cleanup);
}
exports.entersState = entersState;
//# sourceMappingURL=entersState.js.map